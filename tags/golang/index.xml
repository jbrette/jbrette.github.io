<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Jerome Brette&#39;s Blog</title>
    <link>https://jbrette.github.io/tags/golang/</link>
    <description>Recent content in golang on Jerome Brette&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Jun 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://jbrette.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating simple GO server container</title>
      <link>https://jbrette.github.io/kubernetes/apps/2018-06-29-a/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/apps/2018-06-29-a/</guid>
      <description>Goal  Use SCRATCH has base image to keep size minimum Simple HelloWorld GO web server Create associated HELM chart for Kubernetes deployment Provide deployment for both amd64 and arm32v7  Simple GO Server compilation The gohttpserver repo showcases:
 How to compile a GO process How to leverage Travis to compile for amd64 and arm32v7. Branch amd64 is for normal PC and HP server. Branch arm32v7 produces software usable on Raspberry PI 3B+  Kubeplay Github repo The kubeplay repo describes:</description>
    </item>
    
    <item>
      <title>Setup your GOLANG environment</title>
      <link>https://jbrette.github.io/kubernetes/devops/2018-06-22-a/</link>
      <pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/devops/2018-06-22-a/</guid>
      <description>Goal A lot of the opensource projects evolvoving around Kubernetes are written in go. It is very usefull to be able to rebuild so projects using go get or go build.
Installing the right version of GO If you have strange errors, when running go get &amp;hellip;., chances are that your version of GO is old. On Ubuntu, it is actually quite simple to address the issue.
If you are still running Ubuntu 16.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://jbrette.github.io/archives/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/archives/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://jbrette.github.io/archives/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/archives/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>
