<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wip on Jerome Brette&#39;s Blog</title>
    <link>https://jbrette.github.io/tags/wip/</link>
    <description>Recent content in Wip on Jerome Brette&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jbrette.github.io/tags/wip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build and Deploy MachineLearning Kubeflow Framework</title>
      <link>https://jbrette.github.io/post/2018-07-19-a/</link>
      <pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/post/2018-07-19-a/</guid>
      <description> Goal Kubeflow is a process that allows you to deploy machine learning infrastructure on top of a Kubernetes cluster. The goal here is to deploy Kubeflow first on a local simple Kubernetes cluster running in a VM and then deploy it in the Kubernetes PI Cluster
Key Aspects  WIP  Deploy  WIP  Conclusion  WIP  Reference Links  [Kubernetes cross build]()  </description>
    </item>
    
    <item>
      <title>Compile and Test Portieris</title>
      <link>https://jbrette.github.io/post/2018-07-18-a/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/post/2018-07-18-a/</guid>
      <description>Goal One of the biggest security risks related to Kubernetes are often linked to the fact that it is really hard to ensure that only &amp;ldquo;approved&amp;rdquo; images are deployed in your Kubernetes cluster. The goal here is to leverage Notary and the a project called &amp;ldquo;Portieris&amp;rdquo; created by IBM.
Key Aspects  Rebuild the Notary Rebuild and Deploy Portieris using Helm  Build Notary Clone go get github.com/theupdateframework/notary go install -tags pkcs11 github.</description>
    </item>
    
    <item>
      <title>Rebuild Calico for AMD64 ad ARM32V7</title>
      <link>https://jbrette.github.io/post/2018-07-17-a/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/post/2018-07-17-a/</guid>
      <description> Goal Neither calico nor canal seems to be available for usage yet on ARM32V7 for PI. The attempt here is to cross-compile the calico containers and use them on the PI cluster.
Key Aspects  Rebuild the Calico  Build Kubernetes executables for AMD64 and ARM  WIP  Conclusion  WIP  Reference Links  [Kubernetes cross build]()  </description>
    </item>
    
    <item>
      <title>Rebuild Hyperkube images</title>
      <link>https://jbrette.github.io/post/2018-07-16-a/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/post/2018-07-16-a/</guid>
      <description> Goal This post is to validate that it would be possible if urgency dictates it to rebuild the hyperkube Kubernetes image.
Key Aspects  Rebuild Hyperkube images for amd64 and arm32v7 Rebuild the individual images deployed by kubeadm  Build Kubernetes executables for AMD64 and ARM  WIP  Conclusion  WIP  Reference Links  [Kubernetes cross build]()  </description>
    </item>
    
    <item>
      <title>Add Persistency Volume to PI Clusters</title>
      <link>https://jbrette.github.io/post/2018-07-08-a/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/post/2018-07-08-a/</guid>
      <description> Goal In order to install OpenHAB, HomeAssistent or even promoteheus using Kubernetes, we need to first create Persistency Volumes
Procedures  WIP  Results    Reference Links  TBD  </description>
    </item>
    
  </channel>
</rss>