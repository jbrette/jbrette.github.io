<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Helm on Jerome Brette&#39;s Blog</title>
    <link>https://jbrette.github.io/tags/helm/</link>
    <description>Recent content in Helm on Jerome Brette&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jbrette.github.io/tags/helm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploy Helm and Tiller on Rasberry PI Cluster</title>
      <link>https://jbrette.github.io/post/2018-07-13-a/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/post/2018-07-13-a/</guid>
      <description>Goal  The goal is to setup helm and tiller on the Raspberry PI cluster Having the golang, glide&amp;hellip;and related libraries setup in a PI for compilation is kind of complicated. I started but encounter too many issues (even small), had to install too many compilation related packages on my PI system, hence decided to use an Ubuntu VM to compile and prepare the binaries for image for helm and tiller.</description>
    </item>
    
    <item>
      <title>Use github repo as helm chart repository</title>
      <link>https://jbrette.github.io/post/2018-07-11-a/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/post/2018-07-11-a/</guid>
      <description>Goal  Save the helm charts on github mainly for the RPI Kubernetes cluster Figure out a way to access them  Build the chart and upload it to the helm repo For that purpose I used by kubeplay repo where I had helm charts and container ready
git clone -b arm32v7 git@github.com:jbrette/kubeplay.git cd kubeplay/ helm package charts/kubeplay-arm32v7/ --app-version 0.1.0 --destination ./helmrepo/ cd helmrepo/ helm repo index . git add .</description>
    </item>
    
  </channel>
</rss>