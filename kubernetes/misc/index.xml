<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MISC on Jerome Brette&#39;s Blog</title>
    <link>https://jbrette.github.io/kubernetes/misc/</link>
    <description>Recent content in MISC on Jerome Brette&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://jbrette.github.io/kubernetes/misc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build and Deploy Kubernetes Hashicorp Vault</title>
      <link>https://jbrette.github.io/kubernetes/misc/2018-08-01-a/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/misc/2018-08-01-a/</guid>
      <description>Goal Vault is aiming at improving security of the containers by rotating token and credential much more often than usual. Looks like it is especially effectiv to help rotate passwords used to access internal databases.
Key Aspects  Compile and deploy the vault code in vault  Deploy  WIP  Conclusion  WIP  Reference Links  Official HashiCorp Code  </description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes Istio</title>
      <link>https://jbrette.github.io/kubernetes/misc/2018-07-31-a/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/misc/2018-07-31-a/</guid>
      <description>Goal Istio is aiming at improving security of the containers. One of the key aspects is the end to end encryption of the commnucation, the role of citadel to ensure the management of the certificates, the renewal of the certificates. As always, the goal of this post is to study that new tool and figure out I can leverage it in my day to day work.
Key Aspects  Compile and deploy the istio code in istio  Deploy  WIP  Conclusion  WIP  Reference Links  Official istio Code  </description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes test-infra</title>
      <link>https://jbrette.github.io/kubernetes/misc/2018-07-30-a/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/misc/2018-07-30-a/</guid>
      <description>Goal test-infra seems to somewhat overlap with sonobuoy features. The purpose of this post is to fetch the code, compile and deploy it on a Kubernetes cluster.
Key Aspects  Compile and deploy the test-infra code in test-infra  Deploy  WIP  Conclusion  WIP  Reference Links  Official test-infra Code  </description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes Kustomize</title>
      <link>https://jbrette.github.io/kubernetes/misc/2018-07-29-a/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/misc/2018-07-29-a/</guid>
      <description>Goal kustomize seems to help the setup of multiple clusters by removing copy paste accross cluster and still keeping the configuration file has plain yaml instead of the template like it is often the case with t
Key Aspects  Compile and deploy the Kustomize code in Kustomize  Deploy  WIP  Conclusion  WIP  Reference Links  Kustomize Description Official Kustomize Code  </description>
    </item>
    
    <item>
      <title>Compile and Test Portieris</title>
      <link>https://jbrette.github.io/kubernetes/misc/2018-07-18-a/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/misc/2018-07-18-a/</guid>
      <description>Goal One of the biggest security risks related to Kubernetes are often linked to the fact that it is really hard to ensure that only &amp;ldquo;approved&amp;rdquo; images are deployed in your Kubernetes cluster. The goal here is to leverage Notary and the a project called &amp;ldquo;Portieris&amp;rdquo; created by IBM.
Key Aspects  Rebuild the Notary Rebuild and Deploy Portieris using Helm  Build Notary Clone go get github.com/theupdateframework/notary go install -tags pkcs11 github.</description>
    </item>
    
    <item>
      <title>Compile and Test SONOBUOY</title>
      <link>https://jbrette.github.io/kubernetes/misc/2018-07-02-a/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/misc/2018-07-02-a/</guid>
      <description>Goal Sonobouy, deploys in a Kubernetes cluster and helps to assesse the compliance of that cluster
Key Aspects  Fork Sonobuoy Compile the tools Test it  Clone and Compile mkdir -p $HOME/src/github.com/heptio cd $HOME/src/github.com/heptio git clone git@github.com:jbrette/sonobuoy.git export GOPATH=$HOME go version go version go1.10.1 linux/amd64 go get -u -v github.com/heptio/sonobuoy sonobuoy run sonobuoy status kubectl get all -n heptio-sonobuoy NAME READY STATUS RESTARTS AGE pod/sonobuoy 1/1 Running 0 14m pod/sonobuoy-e2e-job-5fff584d11364ca1 2/2 Running 0 12m pod/sonobuoy-systemd-logs-daemon-set-1c53f31cf14246ca-mhztp 2/2 Running 0 12m NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/sonobuoy-master ClusterIP 10.</description>
    </item>
    
    <item>
      <title>Zuul</title>
      <link>https://jbrette.github.io/kubernetes/misc/2018-06-26-a/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jbrette.github.io/kubernetes/misc/2018-06-26-a/</guid>
      <description>Goal OpenStack project are using Zuul for CI/CD process. Zuul itself is based on Ansible to perform the tasks. This post is the collection of notes and tips used during the couple of update I did to some openstack projects.
Understanding Zuul  WIP  Usefull Links  WIP  </description>
    </item>
    
  </channel>
</rss>
